name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      # 1. Check out your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install Bun v1.1.24
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.1.24'

      # 3. Install dependencies using Bun
      - name: Install dependencies
        run: bun install


      # 4. Deploy your database migrations
      - name: Apply database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: bun db:migrate:deploy

      # 5. Trigger Render deploy
      - name: Trigger Render Deploy
        id: render_deploy
        run: |
          RESPONSE=$(curl -s -X POST "https://api.render.com/deploy/srv-d0n7fq9r0fns738njna0?key=IrX_e2hnX4Y")
          echo "$RESPONSE"
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.deploy.id')
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT

      # 6. Monitor Render deploy status
      - name: Monitor Render Deploy Status
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          DEPLOY_ID="${{ steps.render_deploy.outputs.deploy_id }}"
          SERVICE_ID="srv-d0n7fq9r0fns738njna0"
          API_URL="https://api.render.com/v1/services/$SERVICE_ID/deploys/$DEPLOY_ID"
          AUTH_HEADER="Authorization: Bearer $RENDER_API_KEY"

          if [ -z "$DEPLOY_ID" ] || [ "$DEPLOY_ID" == "null" ]; then
            echo "Could not retrieve deploy ID. Exiting."
            exit 1
          fi

          echo "Polling Render deploy status for deploy ID: $DEPLOY_ID"
          for i in {1..30}; do
            STATUS=$(curl -s -H "$AUTH_HEADER" "$API_URL" | jq -r '.status')
            echo "Current status: $STATUS"
            if [[ "$STATUS" == "live" ]]; then
              echo "Deploy succeeded!"
              exit 0
            elif [[ "$STATUS" == "failed" || "$STATUS" == "update_failed" ]]; then
              echo "Deploy failed with status: $STATUS"
              exit 1
            fi
            sleep 10
          done
          echo "Timed out waiting for deploy to complete."
          exit 1
